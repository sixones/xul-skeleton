h1. XULRunner skeleton application

A simple XULRunner skeleton application to use when your programming a cross-platform XULRunner application using the
Mozilla build system.

h2. Usage

* Get the Mozilla build system source
* Fork project or clone the source
* Place your project directory inside your Mozilla directory
* Change the pre-defined variables (through the art of find + replace in your fave text editor)
* Code and release your app, try to give us some credit.

h3. Predefined variables

To make things abit easier, I've used some variables throughout the application you can simply go through each variable
and use find + replace across all the files

	__APP_NAME__ - Application name (without spaces), use the folder name of your project

	__APP_DISPLAY_NAME__ - Application display name
	
	__APP_VERSION__ - Version string
	
	__APP_VENDOR__ - Vendor name
	
	__APP_ID__ - Unique application id, usually something like org.sixones@zenses or a GUID
	
	__APP_COPYRIGHT__ - Copyright notice
	
	__MAIN_CHROME__ - The default xul chrome file to launch on startup, dont include the .xul extension
	
	__IDL_UUID__ - Random GUID for your first idl header

h3. XPCOM components

To enable the Mozilla build system to compile your XPCOM components you will need to modify the <code>Makefile.in</code> file,
and add <code>components</code> to the <code>DIRS</code> variable.

You might want to also write some C++, the current code under the <code>component</code> <code>src</code> and <code>public</code>
directories should compile without errors but will provide no functionality and should be modified before expecting results.

h2. Resources



h2. Contribute

* Fork project
* Make changes / updates
* Send a pull request back to me

h2. License

Released under MIT. See LICENSE.textile, some files are originally from McCoy (from the Mozilla Foundation) and have been modified.